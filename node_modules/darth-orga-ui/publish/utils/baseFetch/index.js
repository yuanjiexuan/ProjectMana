"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get = get;
exports.post = post;
exports.put = put;
exports["default"] = void 0;

var _newArrowCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck"));

var _axios = _interopRequireDefault(require("axios"));

require("../../mock/server");

var _this = void 0;

(function () {
  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;
  enterModule && enterModule(module);
})();

var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal["default"].signature : function (a) {
  return a;
};

_axios["default"].defaults.timeout = 100000; // axios.defaults.baseURL = "http://10.119.9.106:8080";

_axios["default"].defaults.baseURL = "/";
/**
 * http request 拦截器
 */

_axios["default"].interceptors.request.use(function (config) {
  (0, _newArrowCheck2["default"])(this, _this);
  // config.data = JSON.stringify(config.data);
  config.headers = {
    "Content-Type": "application/json"
  };
  return config;
}.bind(void 0), function (error) {
  (0, _newArrowCheck2["default"])(this, _this);
  return Promise.reject(error);
}.bind(void 0));
/**
 * http response 拦截器
 */


_axios["default"].interceptors.response.use(function (response) {
  (0, _newArrowCheck2["default"])(this, _this);

  if (response.data.errCode === 2) {
    console.log("过期");
  }

  return response;
}.bind(void 0), function (error) {
  (0, _newArrowCheck2["default"])(this, _this);
  console.log("请求出错：", error);
}.bind(void 0));

function get(url) {
  var _this2 = this;

  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return new Promise(function (resolve, reject) {
    var _this3 = this;

    (0, _newArrowCheck2["default"])(this, _this2);

    _axios["default"].get(url, {
      params: params
    }).then(function (response) {
      (0, _newArrowCheck2["default"])(this, _this3);
      resolve(response.data);
    }.bind(this))["catch"](function (error) {
      (0, _newArrowCheck2["default"])(this, _this3);
      errorMsg(err);
      reject(error);
    }.bind(this));
  }.bind(this));
}

function post(url, data) {
  var _this4 = this;

  return new Promise(function (resolve, reject) {
    var _this5 = this;

    (0, _newArrowCheck2["default"])(this, _this4);

    _axios["default"].post(url, data).then(function (response) {
      (0, _newArrowCheck2["default"])(this, _this5);
      resolve(response.data);
    }.bind(this), function (err) {
      (0, _newArrowCheck2["default"])(this, _this5);
      errorMsg(err);
      reject(err);
    }.bind(this));
  }.bind(this));
}

function put(url) {
  var _this6 = this;

  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return new Promise(function (resolve, reject) {
    var _this7 = this;

    (0, _newArrowCheck2["default"])(this, _this6);

    _axios["default"].put(url, data).then(function (response) {
      (0, _newArrowCheck2["default"])(this, _this7);
      resolve(response.data);
    }.bind(this), function (err) {
      (0, _newArrowCheck2["default"])(this, _this7);
      errorMsg(err);
      reject(err);
    }.bind(this));
  }.bind(this));
}

function errorMsg(err) {
  if (err && err.response) {
    switch (err.response.status) {
      case 400:
        alert(err.response.data.error.details);
        break;

      case 401:
        alert("未授权，请登录");
        break;

      case 403:
        alert("拒绝访问");
        break;

      case 404:
        alert("请求地址出错");
        break;

      case 408:
        alert("请求超时");
        break;

      case 500:
        alert("服务器内部错误");
        break;

      case 501:
        alert("服务未实现");
        break;

      case 502:
        alert("网关错误");
        break;

      case 503:
        alert("服务不可用");
        break;

      case 504:
        alert("网关超时");
        break;

      case 505:
        alert("HTTP版本不受支持");
        break;

      default:
    }
  }
} //统一接口处理，返回数据


var _default = function _default(fecth, url, param) {
  var _this8 = this;

  var _data = "";
  return new Promise(function (resolve, reject) {
    (0, _newArrowCheck2["default"])(this, _this8);

    switch (fecth) {
      case "get":
        console.log("begin a get request,and url:", url);
        get(url, param).then(function (response) {
          resolve(response);
        })["catch"](function (error) {
          console.log("get request GET failed.", error);
          reject(error);
        });
        break;

      case "post":
        post(url, param).then(function (response) {
          resolve(response);
        })["catch"](function (error) {
          console.log("get request POST failed.", error);
          reject(error);
        });
        break;

      default:
        break;
    }
  }.bind(this));
};

var _default2 = _default;
exports["default"] = _default2;
;

(function () {
  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(get, "get", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/utils/baseFetch/index.js");
  reactHotLoader.register(post, "post", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/utils/baseFetch/index.js");
  reactHotLoader.register(put, "put", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/utils/baseFetch/index.js");
  reactHotLoader.register(errorMsg, "errorMsg", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/utils/baseFetch/index.js");
  reactHotLoader.register(_default, "default", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/utils/baseFetch/index.js");
})();

;

(function () {
  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;
  leaveModule && leaveModule(module);
})();