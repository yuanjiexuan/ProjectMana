"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

require("antd/es/tooltip/style/css");

var _tooltip = _interopRequireDefault(require("antd/es/tooltip"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _newArrowCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck"));

var _react = _interopRequireWildcard(require("react"));

var _mobx = require("mobx");

var _icons = require("@ant-design/icons");

require("./index.scss");

var _this = void 0;

(function () {
  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;
  enterModule && enterModule(module);
})();

var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal["default"].signature : function (a) {
  return a;
};

var DarthTree = __signature__(function DarthTree(props) {
  var _this2 = this;

  (0, _newArrowCheck2["default"])(this, _this);
  var _props$defaultExpande = props.defaultExpandedKeys,
      defaultExpandedKeys = _props$defaultExpande === void 0 ? [] : _props$defaultExpande,
      _props$data = props.data,
      data = _props$data === void 0 ? [] : _props$data,
      _props$defaultCurrent = props.defaultCurrent,
      defaultCurrent = _props$defaultCurrent === void 0 ? '' : _props$defaultCurrent,
      onSelect = props.onSelect,
      onDelete = props.onDelete,
      onEdit = props.onEdit;

  var _useState = (0, _react.useState)(defaultExpandedKeys),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      expandedTree = _useState2[0],
      setExpandedTree = _useState2[1];

  var _useState3 = (0, _react.useState)(defaultCurrent),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      clickKey = _useState4[0],
      setClickKey = _useState4[1];

  var isExpandedTree = function isExpandedTree(key) {
    var _this3 = this;

    (0, _newArrowCheck2["default"])(this, _this2);
    return expandedTree.some(function (item) {
      (0, _newArrowCheck2["default"])(this, _this3);
      return item === key;
    }.bind(this));
  }.bind(this);

  var setOpenOrClose = function setOpenOrClose(key) {
    var _this4 = this;

    (0, _newArrowCheck2["default"])(this, _this2);

    if (isExpandedTree(key)) {
      setExpandedTree(expandedTree.filter(function (item) {
        (0, _newArrowCheck2["default"])(this, _this4);
        return item !== key;
      }.bind(this)));
    } else {
      setExpandedTree(expandedTree.concat(key));
    }
  }.bind(this);

  var clickTree = function clickTree(e) {
    (0, _newArrowCheck2["default"])(this, _this2);
    setClickKey(e.id);

    if (onSelect) {
      if (typeof onSelect === 'function') {
        onSelect(e);
      } else {
        console.error('onSelect 是函数方法');
      }
    }
  }.bind(this);

  var deleteItem = function deleteItem(item) {
    (0, _newArrowCheck2["default"])(this, _this2);

    if (onDelete) {
      if (typeof onDelete === 'function') {
        onDelete((0, _mobx.toJS)(item));
      } else {
        console.error('onDelete 是函数方法');
      }
    }
  }.bind(this);

  var editItem = function editItem(item) {
    (0, _newArrowCheck2["default"])(this, _this2);

    if (onEdit) {
      if (typeof onEdit === 'function') {
        onEdit(item);
      } else {
        console.error('onEdit 是函数方法');
      }
    }
  }.bind(this);

  var _loop = function loop() {
    var _this5 = this;

    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    (0, _newArrowCheck2["default"])(this, _this2);
    return data.map(function (item, index) {
      var _this6 = this;

      (0, _newArrowCheck2["default"])(this, _this5);

      if (item.children && item.children.length) {
        return /*#__PURE__*/_react["default"].createElement("li", {
          key: item.orgaId
        }, /*#__PURE__*/_react["default"].createElement("div", {
          className: 'darth-tree-children'
        }, isExpandedTree(item.orgaId) ? /*#__PURE__*/_react["default"].createElement(_icons.CaretDownOutlined, {
          onClick: function () {
            (0, _newArrowCheck2["default"])(this, _this6);
            return setOpenOrClose(item.orgaId);
          }.bind(this)
        }) : /*#__PURE__*/_react["default"].createElement(_icons.CaretRightOutlined, {
          onClick: function () {
            (0, _newArrowCheck2["default"])(this, _this6);
            return setOpenOrClose(item.orgaId);
          }.bind(this)
        }), /*#__PURE__*/_react["default"].createElement("div", {
          className: 'darth-tree-item'
        }, /*#__PURE__*/_react["default"].createElement("span", {
          className: clickKey === item.orgaId ? 'darth-tree-node' + ' darth-tree-active' : 'darth-tree-node',
          onClick: function () {
            (0, _newArrowCheck2["default"])(this, _this6);
            return clickTree(item);
          }.bind(this)
        }, /*#__PURE__*/_react["default"].createElement(_tooltip["default"], {
          placement: "top",
          title: item.orgaName
        }, item.orgaName)), /*#__PURE__*/_react["default"].createElement("div", {
          className: 'darth-tree-item-action'
        }, /*#__PURE__*/_react["default"].createElement("span", {
          onClick: function () {
            (0, _newArrowCheck2["default"])(this, _this6);
            return editItem(item);
          }.bind(this),
          style: {
            display: item["default"] ? 'none' : 'inline-block'
          }
        }, "\u7F16\u8F91"), /*#__PURE__*/_react["default"].createElement("span", {
          onClick: function () {
            (0, _newArrowCheck2["default"])(this, _this6);
            return deleteItem(item);
          }.bind(this),
          style: {
            display: item.children && item.children.length ? 'none' : 'inline-block'
          }
        }, "\u5220\u9664")))), /*#__PURE__*/_react["default"].createElement("ul", {
          className: !isExpandedTree(item.orgaId) ? 'darth-tree-node-hidden' : null
        }, _loop(item.children)));
      }

      return /*#__PURE__*/_react["default"].createElement("li", {
        key: item.orgaId
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: 'darth-tree-item'
      }, /*#__PURE__*/_react["default"].createElement("span", {
        className: clickKey === item.orgaId ? 'darth-tree-node' + ' darth-tree-active' : 'darth-tree-node',
        onClick: function () {
          (0, _newArrowCheck2["default"])(this, _this6);
          return clickTree(item);
        }.bind(this)
      }, /*#__PURE__*/_react["default"].createElement(_tooltip["default"], {
        placement: "top",
        title: item.orgaName
      }, item.orgaName)), /*#__PURE__*/_react["default"].createElement("div", {
        className: 'darth-tree-item-action'
      }, /*#__PURE__*/_react["default"].createElement("span", {
        onClick: function () {
          (0, _newArrowCheck2["default"])(this, _this6);
          return editItem(item);
        }.bind(this),
        style: {
          display: item["default"] ? 'none' : 'inline-block'
        }
      }, "\u7F16\u8F91"), /*#__PURE__*/_react["default"].createElement("span", {
        onClick: function () {
          (0, _newArrowCheck2["default"])(this, _this6);
          return deleteItem(item);
        }.bind(this),
        style: {
          display: item["default"] ? 'none' : 'inline-block'
        }
      }, "\u5220\u9664"))));
    }.bind(this));
  }.bind(this);

  return /*#__PURE__*/_react["default"].createElement("div", {
    className: 'darth-tree'
  }, _loop(data));
}, "useState{[expandedTree, setExpandedTree](defaultExpandedKeys)}\nuseState{[clickKey, setClickKey](defaultCurrent)}").bind(void 0);

var _default = DarthTree;
var _default2 = _default;
exports["default"] = _default2;
;

(function () {
  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(DarthTree, "DarthTree", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/common/darth-tree/index.js");
  reactHotLoader.register(_default, "default", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/common/darth-tree/index.js");
})();

;

(function () {
  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;
  leaveModule && leaveModule(module);
})();