"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

require("antd/es/button/style/css");

var _button = _interopRequireDefault(require("antd/es/button"));

require("antd/es/input/style/css");

var _input = _interopRequireDefault(require("antd/es/input"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _newArrowCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck"));

var _react = _interopRequireWildcard(require("react"));

var _mobxReact = require("mobx-react");

var _classes = require("../../../common/utils/classes");

var _darthTree = _interopRequireDefault(require("../../../common/darth-tree"));

var _orgAdd = _interopRequireDefault(require("./org-add"));

var _utils = require("../../../common/utils");

require("./tree.scss");

var _this = void 0;

(function () {
  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;
  enterModule && enterModule(module);
})();

var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal["default"].signature : function (a) {
  return a;
};

var sc = (0, _classes.scopedClassMaker)('orga-tree');

var OrgTree = __signature__(function OrgTree(props) {
  var _this2 = this;

  (0, _newArrowCheck2["default"])(this, _this);
  var classNameTree = props.classNameTree,
      treeData = props.treeData,
      onSelect = props.onSelect,
      darthOrgStore = props.darthOrgStore,
      getAllTree = props.getAllTree;
  var deleteTree = darthOrgStore.deleteTree;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];

  var _useState3 = (0, _react.useState)({}),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      editData = _useState4[0],
      setEditData = _useState4[1];

  var _useState5 = (0, _react.useState)([]),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      parentTree = _useState6[0],
      setParentTree = _useState6[1];

  var _useState7 = (0, _react.useState)(false),
      _useState8 = (0, _slicedToArray2["default"])(_useState7, 2),
      isEdit = _useState8[0],
      setEdit = _useState8[1];

  var _loop = function loop(data) {
    var _this3 = this;

    var newData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    (0, _newArrowCheck2["default"])(this, _this2);
    data.forEach(function (item) {
      (0, _newArrowCheck2["default"])(this, _this3);
      newData.push({
        orgaId: item.orgaId,
        orgaName: item.orgaName
      });

      if (item.children && item.children.length > 0) {
        return _loop(item.children, newData);
      }
    }.bind(this));
    return newData;
  }.bind(this);

  var onAddOrg = function onAddOrg() {
    (0, _newArrowCheck2["default"])(this, _this2);

    var tree = _loop(treeData);

    setParentTree(tree);
    setVisible(true);
  }.bind(this);

  var cancelAddOrg = function cancelAddOrg() {
    (0, _newArrowCheck2["default"])(this, _this2);
    setVisible(false);
    setEditData({});
    setEdit(false);
  }.bind(this);

  var onDeleteTree = function onDeleteTree(data) {
    var _this4 = this;

    (0, _newArrowCheck2["default"])(this, _this2);
    var formData = new FormData();
    formData.append('id', data.orgaId);
    (0, _utils.baseFetch)('post', 'api/orga/deleteOrga', formData).then(function (res) {
      (0, _newArrowCheck2["default"])(this, _this4);

      if (!res.code) {
        deleteTree(data.orgaId);
      }
    }.bind(this));
  }.bind(this);

  var onEditTree = function onEditTree(data) {
    var _this5 = this;

    (0, _newArrowCheck2["default"])(this, _this2);
    var formData = new FormData();
    formData.append('id', data.orgaId);
    (0, _utils.baseFetch)('post', 'api/orga/findOrga', formData).then(function (res) {
      (0, _newArrowCheck2["default"])(this, _this5);

      if (!res.code) {
        var tree = _loop(treeData);

        setParentTree(tree);
        setEditData(res.data);
        setEdit(true);
        setVisible(true);
      }
    }.bind(this)); // setEditData(data)
    // setEdit(true)
    // setVisible(true)
  }.bind(this);

  return /*#__PURE__*/_react["default"].createElement("div", {
    className: sc('wrap', {
      extra: [classNameTree].join(' ')
    })
  }, /*#__PURE__*/_react["default"].createElement(_input["default"], {
    placeholder: '搜索组织名称'
  }), /*#__PURE__*/_react["default"].createElement("div", {
    className: sc('wrap-tree')
  }, /*#__PURE__*/_react["default"].createElement(_darthTree["default"], {
    data: treeData,
    onSelect: onSelect,
    defaultExpandedKeys: ['key1', 'key1-2'],
    onDelete: onDeleteTree,
    onEdit: onEditTree
  })), /*#__PURE__*/_react["default"].createElement(_button["default"], {
    type: "primary",
    onClick: onAddOrg
  }, "+\u6DFB\u52A0\u7EC4\u7EC7"), /*#__PURE__*/_react["default"].createElement(_orgAdd["default"], (0, _extends2["default"])({}, props, {
    visible: visible,
    cancelAddOrg: cancelAddOrg,
    parentTree: parentTree,
    editData: editData,
    isEdit: isEdit,
    getAllTree: getAllTree
  })));
}, "useState{[visible, setVisible](false)}\nuseState{[editData, setEditData]({})}\nuseState{[parentTree, setParentTree]([])}\nuseState{[isEdit, setEdit](false)}").bind(void 0);

var _default = (0, _mobxReact.observer)(OrgTree);

var _default2 = _default;
exports["default"] = _default2;
;

(function () {
  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(sc, "sc", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/modules/org/components/tree.js");
  reactHotLoader.register(OrgTree, "OrgTree", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/modules/org/components/tree.js");
  reactHotLoader.register(_default, "default", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/modules/org/components/tree.js");
})();

;

(function () {
  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;
  leaveModule && leaveModule(module);
})();