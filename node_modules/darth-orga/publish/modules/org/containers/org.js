"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _newArrowCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck"));

var _react = _interopRequireWildcard(require("react"));

var _mobxReact = require("mobx-react");

var _tree = _interopRequireDefault(require("../components/tree"));

var _breadCrumb = _interopRequireDefault(require("../../../common/bread-crumb"));

var _deltailsOrg = _interopRequireDefault(require("../components/deltails-org"));

var _utils = require("../../../common/utils");

require("./org.scss");

var _this = void 0;

(function () {
  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;
  enterModule && enterModule(module);
})();

var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal["default"].signature : function (a) {
  return a;
};

var DarthOrgContent = __signature__(function DarthOrgContent(props) {
  var _this2 = this;

  (0, _newArrowCheck2["default"])(this, _this);
  var darthOrgStore = props.darthOrgStore,
      selectMenu = props.selectMenu;
  var treeData = darthOrgStore.treeData,
      selectData = darthOrgStore.selectData,
      getTree = darthOrgStore.getTree,
      selectTreeOrgDetail = darthOrgStore.selectTreeOrgDetail;
  var crumbRoutes = [{
    path: 'index',
    breadcrumbName: 'home'
  }, {
    path: 'first',
    breadcrumbName: 'first'
  }, {
    path: 'second',
    breadcrumbName: 'second'
  }]; // 初始化 组织树的数据

  (0, _react.useEffect)(function () {
    (0, _newArrowCheck2["default"])(this, _this2);
    getAllTree();
  }.bind(this), []); // 获取所有的树的数据

  var getAllTree = function getAllTree() {
    var _this3 = this;

    (0, _newArrowCheck2["default"])(this, _this2);
    (0, _utils.baseFetch)('post', 'api/orga/findOrgaTree').then(function (res) {
      (0, _newArrowCheck2["default"])(this, _this3);

      if (!res.code) {
        getTree([res.data]);
      }
    }.bind(this));
  }.bind(this); // 选中树的数据


  var onSelectTree = function onSelectTree(data) {
    var _this4 = this;

    (0, _newArrowCheck2["default"])(this, _this2);
    var formData = new FormData();
    formData.append('id', data.orgaId);
    (0, _utils.baseFetch)('post', 'api/orga/findOrga', formData).then(function (res) {
      (0, _newArrowCheck2["default"])(this, _this4);

      if (!res.code) {
        selectTreeOrgDetail({
          orgName: res.data.orgaName,
          parentOrg: res.data.parentOrga.orgaName
        });
      }
    }.bind(this))["catch"](function (err) {
      (0, _newArrowCheck2["default"])(this, _this4);
      console.log(err);
    }.bind(this));
  }.bind(this);

  var onSelectMenu = function onSelectMenu(e) {
    (0, _newArrowCheck2["default"])(this, _this2);

    if (typeof selectMenu === 'function') {
      selectMenu(e);
    } else {
      console.error('selectMenu 必须是函数方法');
    }
  }.bind(this);

  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "org-parent"
  }, /*#__PURE__*/_react["default"].createElement(_tree["default"], (0, _extends2["default"])({
    treeData: treeData,
    onSelect: onSelectTree
  }, props, {
    getAllTree: getAllTree
  })), /*#__PURE__*/_react["default"].createElement("div", {
    className: "org-parent-detail"
  }, /*#__PURE__*/_react["default"].createElement(_breadCrumb["default"], {
    routes: crumbRoutes
  }), /*#__PURE__*/_react["default"].createElement(_deltailsOrg["default"], {
    data: selectData
  })));
}, "useEffect{}").bind(void 0);

var _default = (0, _mobxReact.inject)('darthOrgStore')((0, _mobxReact.observer)(DarthOrgContent));

var _default2 = _default;
exports["default"] = _default2;
;

(function () {
  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(DarthOrgContent, "DarthOrgContent", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/modules/org/containers/org.js");
  reactHotLoader.register(_default, "default", "/Users/mahai/Desktop/darth-platform-ui/packages/darth-orga-ui/src/modules/org/containers/org.js");
})();

;

(function () {
  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;
  leaveModule && leaveModule(module);
})();